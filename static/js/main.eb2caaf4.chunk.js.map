{"version":3,"sources":["components/getDataFromServer.js","store/index.js","store/action.js","store/selectors.js","components/RestaurantCard/RestaurantCard.js","components/RestaurantsListPage/RestaurantsListPage.js","App.js","index.js"],"names":["getDataFromServer","url","fetch","then","data","json","initialState","restaurantsListData","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread2","payload","applyMiddleware","thunk","selectRestaurantsList","createSelector","_ref","feedItems","storesMap","map","_ref2","uuid","RestaurantCard","imageUrl","title","categories","etaRange","react_default","a","createElement","className","src","alt","join","connect","restaurantsData","loadRestaurants","dispatch","responce","regenerator_default","async","_context","prev","next","awrap","sent","stop","useEffect","heroImageUrl","components_RestaurantCard_RestaurantCard","key","text","App","es","components_RestaurantsListPage_RestaurantsListPage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"kTAEeA,EAFW,SAAAC,GAAG,OAAIC,MAAMD,GAAKE,KAAK,SAAAC,GAAI,OAAIA,EAAKC,UCIxDC,EAAe,CACnBC,oBAAqB,MAeVC,EAAQC,YAZL,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBL,EAAcQ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOC,MACb,ICNwC,kBDOtC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEH,oBAAqBO,EAAOI,UAEhC,QACE,OAAOR,IAI6BJ,EAAca,YAAgBC,cEhB3DC,EAAwBC,YAFhB,SAAAZ,GAAK,OAAIA,GAI5B,SAAAa,GAA6B,IAA1BhB,EAA0BgB,EAA1BhB,oBACD,IAAKA,EACH,MAAO,GAFkB,IAKnBiB,EAAyBjB,EAAzBiB,UAAWC,EAAclB,EAAdkB,UAEnB,OAAOD,EAAUE,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAAcH,EAAUG,OCWlCC,SApBQ,SAAAN,GAAA,IAAGO,EAAHP,EAAGO,SAAUC,EAAbR,EAAaQ,MAAOC,EAApBT,EAAoBS,WAAYC,EAAhCV,EAAgCU,SAAhC,OACrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKR,EAAUS,IAAKR,EAAOM,UAAU,yBAC1CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAA0BN,GACxCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACZL,EAAWQ,KAAK,WAEnBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZJ,MCiCQQ,qBAJS,SAAA/B,GAAK,MAAK,CAChCgC,gBAAiBrB,EAAsBX,KAIvC,CAAEiC,gBHnC2B,kBAAM,SAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAX,EAAAY,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAJ,EAAAX,EAAAgB,MACXnD,EAVd,gEASyB,OAC7B6C,EAD6BG,EAAAI,KAGnCR,EAR+B,CAC/B7B,KAH0C,kBAI1CG,QAMyB2B,EAASzC,OAHC,wBAAA4C,EAAAK,aGkCtBZ,CAlCa,SAAAlB,GACJ,IADOoB,EACPpB,EADOoB,gBAC7BD,EAAsBnB,EAAtBmB,gBAKA,OAJAY,oBAAU,WACRX,KACC,IAGDT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZK,EAAgBhB,IAAI,SAAAC,GAAA,IACnBC,EADmBD,EACnBC,KAAMG,EADaJ,EACbI,MAAOwB,EADM5B,EACN4B,aAAcvB,EADRL,EACQK,WAAYC,EADpBN,EACoBM,SADpB,OAGnBC,EAAAC,EAAAC,cAACoB,EAAD,CACEC,IAAK7B,EACLA,KAAMA,EACNG,MAAOA,EACPD,SAAUyB,EACVvB,WAAYA,EACZC,SAAUA,EAAWA,EAASyB,KApBd,sBCSXC,EAVH,kBACVzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAUpD,MAAOA,GACf0B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACdH,EAAAC,EAAAC,cAACyB,EAAD,gBCNRC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.eb2caaf4.chunk.js","sourcesContent":["const getDataFromServer = url => fetch(url).then(data => data.json());\n\nexport default getDataFromServer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as actionCreater from './action';\n\nconst initialState = {\n  restaurantsListData: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionCreater.ACTION_TYPES_SAVE_RESTAURANT:\n      return ({\n        ...state,\n        restaurantsListData: action.payload,\n      });\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, initialState, applyMiddleware(thunk));\n","import getDataFromServer from '../components/getDataFromServer';\n\nconst api = 'https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants';\n\nexport const ACTION_TYPES_SAVE_RESTAURANT = 'SAVE_RESTAURANT';\n\nconst saveRestaurants = data => ({\n  type: ACTION_TYPES_SAVE_RESTAURANT,\n  payload: data,\n});\n\nexport const loadRestaurants = () => async(dispatch) => {\n  const responce = await (getDataFromServer(api));\n\n  dispatch(saveRestaurants(responce.data));\n};\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRestaurantsList = createSelector(\n  rootSelector,\n  ({ restaurantsListData }) => {\n    if (!restaurantsListData) {\n      return [];\n    }\n\n    const { feedItems, storesMap } = restaurantsListData;\n\n    return feedItems.map(({ uuid }) => storesMap[uuid]);\n  }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RestaurantCard.scss';\n\nconst RestaurantCard = ({ imageUrl, title, categories, etaRange }) => (\n  <div className=\"restaurant-card\">\n    <img src={imageUrl} alt={title} className=\"restaurant-card__img\" />\n    <h2 className=\"restaurant-card__title\">{title}</h2>\n    <div className=\"restaurant-card__categories\">\n      {categories.join(' Â· ')}\n    </div>\n    <div className=\"restaurant-card__eta\">\n      {etaRange}\n    </div>\n  </div>\n);\n\nRestaurantCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  etaRange: PropTypes.string.isRequired,\n};\n\nexport default RestaurantCard;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loadRestaurants } from '../../store/action';\nimport { selectRestaurantsList } from '../../store/selectors';\nimport RestaurantCard from '../RestaurantCard/RestaurantCard';\nimport './RestaurantsListPage.scss';\n\nconst DEFAULT_ETA_RANGE = '20 - 30 min';\n\n// eslint-disable-next-line no-shadow\nconst RestaurantsListPage = ({ loadRestaurants,\n  restaurantsData }) => {\n  useEffect(() => {\n    loadRestaurants();\n  }, []);\n\n  return (\n    <div className=\"restaurants-list\">\n      {restaurantsData.map(({\n        uuid, title, heroImageUrl, categories, etaRange,\n      }) => (\n        <RestaurantCard\n          key={uuid}\n          uuid={uuid}\n          title={title}\n          imageUrl={heroImageUrl}\n          categories={categories}\n          etaRange={etaRange ? etaRange.text : DEFAULT_ETA_RANGE}\n        />\n      ))}\n\n    </div>\n  );\n};\n\nRestaurantsListPage.propTypes = {\n  loadRestaurants: PropTypes.func.isRequired,\n  restaurantsData: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  restaurantsData: selectRestaurantsList(state),\n});\n\nexport default connect(mapStateToProps,\n  { loadRestaurants })(RestaurantsListPage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.scss';\nimport { store } from './store/index';\nimport RestaurantsListPage from\n  './components/RestaurantsListPage/RestaurantsListPage';\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"page\">\n      <main className=\"content\">\n        <RestaurantsListPage />\n      </main>\n    </div>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}